/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.analysis;

import postfix.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgramProgram(AProgramProgram node);
    void caseAStatementsStmts(AStatementsStmts node);
    void caseAStmts(AStmts node);
    void caseAImportStmtStmt(AImportStmtStmt node);
    void caseADeclarationStmt(ADeclarationStmt node);
    void caseAAssignmentStatementStmt(AAssignmentStatementStmt node);
    void caseAForLoopStmt(AForLoopStmt node);
    void caseAWhileLoopStmt(AWhileLoopStmt node);
    void caseAControlStatementStmt(AControlStatementStmt node);
    void caseABlockStmtBlock(ABlockStmtBlock node);
    void caseAElifStatementInControlStmt(AElifStatementInControlStmt node);
    void caseAElseStatementInControlStmt(AElseStatementInControlStmt node);
    void caseAElseBlockStatementElseStatement(AElseBlockStatementElseStatement node);
    void caseAElseStatement(AElseStatement node);
    void caseAAssignAssignment(AAssignAssignment node);
    void caseAExprValPrimeExpr(AExprValPrimeExpr node);
    void caseAExpr(AExpr node);
    void caseAExprPrimeOperatorValPrimeExprPrime(AExprPrimeOperatorValPrimeExprPrime node);
    void caseAExprPrime(AExprPrime node);
    void caseAValIdVal(AValIdVal node);
    void caseAValFloatnumVal(AValFloatnumVal node);
    void caseAValIntnumVal(AValIntnumVal node);
    void caseAValStringVal(AValStringVal node);
    void caseAValBoolVal(AValBoolVal node);
    void caseAImportWithoutSeperatorImportT(AImportWithoutSeperatorImportT node);
    void caseAImportWithSeperatorImportT(AImportWithSeperatorImportT node);

    void caseTNewline(TNewline node);
    void caseTComment(TComment node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLCbrack(TLCbrack node);
    void caseTRCbrack(TRCbrack node);
    void caseTLBrack(TLBrack node);
    void caseTRBrack(TRBrack node);
    void caseTString(TString node);
    void caseTIntnum(TIntnum node);
    void caseTFloatnum(TFloatnum node);
    void caseTBool(TBool node);
    void caseTType(TType node);
    void caseTChar(TChar node);
    void caseTId(TId node);
    void caseTBlank(TBlank node);
    void caseTBinInfixOp(TBinInfixOp node);
    void caseTUnaryPrefixOp(TUnaryPrefixOp node);
    void caseTOpAssign(TOpAssign node);
    void caseTSopDot(TSopDot node);
    void caseTKwAs(TKwAs node);
    void caseTKwImport(TKwImport node);
    void caseTKwSeparatedBy(TKwSeparatedBy node);
    void caseTKwFor(TKwFor node);
    void caseTKwWhile(TKwWhile node);
    void caseTKwIn(TKwIn node);
    void caseTKwIf(TKwIf node);
    void caseTKwElse(TKwElse node);
    void caseTKwSortOrder(TKwSortOrder node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
