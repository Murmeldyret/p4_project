/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AExportStatementStmt extends PStmt
{
    private TKwExport _kwExport_;
    private TId _id_;
    private TKwTo _kwTo_;
    private PExpr _expr_;

    public AExportStatementStmt()
    {
        // Constructor
    }

    public AExportStatementStmt(
        @SuppressWarnings("hiding") TKwExport _kwExport_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TKwTo _kwTo_,
        @SuppressWarnings("hiding") PExpr _expr_)
    {
        // Constructor
        setKwExport(_kwExport_);

        setId(_id_);

        setKwTo(_kwTo_);

        setExpr(_expr_);

    }

    @Override
    public Object clone()
    {
        return new AExportStatementStmt(
            cloneNode(this._kwExport_),
            cloneNode(this._id_),
            cloneNode(this._kwTo_),
            cloneNode(this._expr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExportStatementStmt(this);
    }

    public TKwExport getKwExport()
    {
        return this._kwExport_;
    }

    public void setKwExport(TKwExport node)
    {
        if(this._kwExport_ != null)
        {
            this._kwExport_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwExport_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TKwTo getKwTo()
    {
        return this._kwTo_;
    }

    public void setKwTo(TKwTo node)
    {
        if(this._kwTo_ != null)
        {
            this._kwTo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwTo_ = node;
    }

    public PExpr getExpr()
    {
        return this._expr_;
    }

    public void setExpr(PExpr node)
    {
        if(this._expr_ != null)
        {
            this._expr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kwExport_)
            + toString(this._id_)
            + toString(this._kwTo_)
            + toString(this._expr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kwExport_ == child)
        {
            this._kwExport_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._kwTo_ == child)
        {
            this._kwTo_ = null;
            return;
        }

        if(this._expr_ == child)
        {
            this._expr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kwExport_ == oldChild)
        {
            setKwExport((TKwExport) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._kwTo_ == oldChild)
        {
            setKwTo((TKwTo) newChild);
            return;
        }

        if(this._expr_ == oldChild)
        {
            setExpr((PExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
