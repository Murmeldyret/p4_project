/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AStatementsStmts extends PStmts
{
    private PStmt _stmt_;
    private TSemi _semi_;
    private PStmts _stmts_;

    public AStatementsStmts()
    {
        // Constructor
    }

    public AStatementsStmts(
        @SuppressWarnings("hiding") PStmt _stmt_,
        @SuppressWarnings("hiding") TSemi _semi_,
        @SuppressWarnings("hiding") PStmts _stmts_)
    {
        // Constructor
        setStmt(_stmt_);

        setSemi(_semi_);

        setStmts(_stmts_);

    }

    @Override
    public Object clone()
    {
        return new AStatementsStmts(
            cloneNode(this._stmt_),
            cloneNode(this._semi_),
            cloneNode(this._stmts_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStatementsStmts(this);
    }

    public PStmt getStmt()
    {
        return this._stmt_;
    }

    public void setStmt(PStmt node)
    {
        if(this._stmt_ != null)
        {
            this._stmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stmt_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    public PStmts getStmts()
    {
        return this._stmts_;
    }

    public void setStmts(PStmts node)
    {
        if(this._stmts_ != null)
        {
            this._stmts_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stmts_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stmt_)
            + toString(this._semi_)
            + toString(this._stmts_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stmt_ == child)
        {
            this._stmt_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        if(this._stmts_ == child)
        {
            this._stmts_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stmt_ == oldChild)
        {
            setStmt((PStmt) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        if(this._stmts_ == oldChild)
        {
            setStmts((PStmts) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
