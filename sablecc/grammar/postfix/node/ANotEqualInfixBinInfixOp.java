/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ANotEqualInfixBinInfixOp extends PBinInfixOp
{
    private TBopNeq _bopNeq_;

    public ANotEqualInfixBinInfixOp()
    {
        // Constructor
    }

    public ANotEqualInfixBinInfixOp(
        @SuppressWarnings("hiding") TBopNeq _bopNeq_)
    {
        // Constructor
        setBopNeq(_bopNeq_);

    }

    @Override
    public Object clone()
    {
        return new ANotEqualInfixBinInfixOp(
            cloneNode(this._bopNeq_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotEqualInfixBinInfixOp(this);
    }

    public TBopNeq getBopNeq()
    {
        return this._bopNeq_;
    }

    public void setBopNeq(TBopNeq node)
    {
        if(this._bopNeq_ != null)
        {
            this._bopNeq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bopNeq_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._bopNeq_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._bopNeq_ == child)
        {
            this._bopNeq_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._bopNeq_ == oldChild)
        {
            setBopNeq((TBopNeq) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
