/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AImportStmtStmt extends PStmt
{
    private PImport _import_;

    public AImportStmtStmt()
    {
        // Constructor
    }

    public AImportStmtStmt(
        @SuppressWarnings("hiding") PImport _import_)
    {
        // Constructor
        setImport(_import_);

    }

    @Override
    public Object clone()
    {
        return new AImportStmtStmt(
            cloneNode(this._import_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAImportStmtStmt(this);
    }

    public PImport getImport()
    {
        return this._import_;
    }

    public void setImport(PImport node)
    {
        if(this._import_ != null)
        {
            this._import_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._import_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._import_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._import_ == child)
        {
            this._import_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._import_ == oldChild)
        {
            setImport((PImport) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
