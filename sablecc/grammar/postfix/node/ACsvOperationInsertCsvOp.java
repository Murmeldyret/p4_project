/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ACsvOperationInsertCsvOp extends PCsvOp
{
    private PCsvInsert _csvInsert_;

    public ACsvOperationInsertCsvOp()
    {
        // Constructor
    }

    public ACsvOperationInsertCsvOp(
        @SuppressWarnings("hiding") PCsvInsert _csvInsert_)
    {
        // Constructor
        setCsvInsert(_csvInsert_);

    }

    @Override
    public Object clone()
    {
        return new ACsvOperationInsertCsvOp(
            cloneNode(this._csvInsert_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACsvOperationInsertCsvOp(this);
    }

    public PCsvInsert getCsvInsert()
    {
        return this._csvInsert_;
    }

    public void setCsvInsert(PCsvInsert node)
    {
        if(this._csvInsert_ != null)
        {
            this._csvInsert_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._csvInsert_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._csvInsert_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._csvInsert_ == child)
        {
            this._csvInsert_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._csvInsert_ == oldChild)
        {
            setCsvInsert((PCsvInsert) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
