/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ABreakStatementStmt extends PStmt
{
    private TKwBreak _kwBreak_;

    public ABreakStatementStmt()
    {
        // Constructor
    }

    public ABreakStatementStmt(
        @SuppressWarnings("hiding") TKwBreak _kwBreak_)
    {
        // Constructor
        setKwBreak(_kwBreak_);

    }

    @Override
    public Object clone()
    {
        return new ABreakStatementStmt(
            cloneNode(this._kwBreak_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABreakStatementStmt(this);
    }

    public TKwBreak getKwBreak()
    {
        return this._kwBreak_;
    }

    public void setKwBreak(TKwBreak node)
    {
        if(this._kwBreak_ != null)
        {
            this._kwBreak_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwBreak_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._kwBreak_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._kwBreak_ == child)
        {
            this._kwBreak_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._kwBreak_ == oldChild)
        {
            setKwBreak((TKwBreak) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
